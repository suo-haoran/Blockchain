from brownie import accounts, config, SimpleStorage, network
import os

def get_account():
    # Local test accounts generated by ganache, we can see them with brownie. WARNING: THIS METHOD IS FOR TESTING ONLY
    # account = accounts[0]
    # print(account)
    # Safest way: Load account created in brownie. See README.md on how to create accounts.
    # account = accounts.load("test-account")
    # print(account)

    # Load private keys in .env. WARNING: THIS METHOD IS FOR TESTING ONLY
    # account = accounts.add(os.getenv("PRIVATE_KEY"))
    # print(account)

    # Load private keys in .env. WARNING: THIS METHOD IS FOR TESTING ONLY
    # account = accounts.add(os.getenv("PRIVATE_KEY"))
    # print(account)
    # Load private keys in .env via config. WARNING: THIS METHOD IS FOR TESTING ONLY
    # account = accounts.add(config['wallets']['from_key'])
    # print(account)
    if network.show_active() == 'development':
        return accounts[0]
    else:
        return accounts.add(config['wallets']['from_key'])

def deploy_simple_storage():
    account = get_account()
    simple_storage = SimpleStorage.deploy({'from': account})
    stored_value = simple_storage.retrieve()
    print(stored_value)
    transaction = simple_storage.store(15, {'from': account})
    transaction.wait(1)
    updated_stored_value = simple_storage.retrieve()
    print(updated_stored_value)

def main():
    deploy_simple_storage()