/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BasicNft, BasicNftInterface } from "../../contracts/BasicNft";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6122d080620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611771565b610347565b60405161012c9190611a7f565b60405180910390f35b61013d610429565b60405161014a9190611a9a565b60405180910390f35b61016d600480360381019061016891906117cb565b6104bb565b60405161017a9190611a18565b60405180910390f35b61019d60048036038101906101989190611731565b610501565b005b6101b960048036038101906101b4919061161b565b610619565b005b6101d560048036038101906101d0919061161b565b610679565b005b6101f160048036038101906101ec91906117cb565b610699565b6040516101fe9190611a18565b60405180910390f35b61020f61074b565b60405161021c9190611c1c565b60405180910390f35b61023f600480360381019061023a91906115ae565b610755565b60405161024c9190611c1c565b60405180910390f35b61025d61080d565b60405161026a9190611a9a565b60405180910390f35b61027b610829565b6040516102889190611a9a565b60405180910390f35b6102ab60048036038101906102a691906116f1565b6108bb565b005b6102c760048036038101906102c2919061166e565b6108d1565b005b6102d1610933565b6040516102de9190611c1c565b60405180910390f35b61030160048036038101906102fc91906117cb565b610961565b60405161030e9190611a9a565b60405180910390f35b610331600480360381019061032c91906115db565b610983565b60405161033e9190611a7f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610422575061042182610a17565b5b9050919050565b60606000805461043890611e05565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611e05565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a81565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611bdc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610acc565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610acc565b610983565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611b7c565b60405180910390fd5b6106148383610ad4565b505050565b61062a610624610acc565b82610b8d565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611bfc565b60405180910390fd5b610674838383610c22565b505050565b610694838383604051806020016040528060008152506108d1565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611bbc565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611b5c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122446057913981565b60606001805461083890611e05565b80601f016020809104026020016040519081016040528092919081815260200182805461086490611e05565b80156108b15780601f10610886576101008083540402835291602001916108b1565b820191906000526020600020905b81548152906001019060200180831161089457829003601f168201915b5050505050905090565b6108cd6108c6610acc565b8383610e89565b5050565b6108e26108dc610acc565b83610b8d565b610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611bfc565b60405180910390fd5b61092d84848484610ff6565b50505050565b60008060065490506109453382611052565b60016006546109549190611cc5565b6006819055508091505090565b6060604051806080016040528060578152602001612244605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a8a81611070565b610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac090611bbc565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b4783610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b9983610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bdb5750610bda8185610983565b5b80610c1957508373ffffffffffffffffffffffffffffffffffffffff16610c01846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c4282610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f90611adc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611b1c565b60405180910390fd5b610d138383836110dc565b610d1e600082610ad4565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6e9190611d1b565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dc59190611cc5565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e848383836110e1565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611b3c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fe99190611a7f565b60405180910390a3505050565b611001848484610c22565b61100d848484846110e6565b61104c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104390611abc565b60405180910390fd5b50505050565b61106c82826040518060200160405280600081525061127d565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111078473ffffffffffffffffffffffffffffffffffffffff166112d8565b15611270578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611130610acc565b8786866040518563ffffffff1660e01b81526004016111529493929190611a33565b602060405180830381600087803b15801561116c57600080fd5b505af192505050801561119d57506040513d601f19601f8201168201806040525081019061119a919061179e565b60015b611220573d80600081146111cd576040519150601f19603f3d011682016040523d82523d6000602084013e6111d2565b606091505b50600081511415611218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120f90611abc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611275565b600190505b949350505050565b61128783836112fb565b61129460008484846110e6565b6112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca90611abc565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561136b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136290611b9c565b60405180910390fd5b61137481611070565b156113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90611afc565b60405180910390fd5b6113c0600083836110dc565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114109190611cc5565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46114d1600083836110e1565b5050565b60006114e86114e384611c5c565b611c37565b90508281526020810184848401111561150457611503611efa565b5b61150f848285611dc3565b509392505050565b600081359050611526816121e7565b92915050565b60008135905061153b816121fe565b92915050565b60008135905061155081612215565b92915050565b60008151905061156581612215565b92915050565b600082601f8301126115805761157f611ef5565b5b81356115908482602086016114d5565b91505092915050565b6000813590506115a88161222c565b92915050565b6000602082840312156115c4576115c3611f04565b5b60006115d284828501611517565b91505092915050565b600080604083850312156115f2576115f1611f04565b5b600061160085828601611517565b925050602061161185828601611517565b9150509250929050565b60008060006060848603121561163457611633611f04565b5b600061164286828701611517565b935050602061165386828701611517565b925050604061166486828701611599565b9150509250925092565b6000806000806080858703121561168857611687611f04565b5b600061169687828801611517565b94505060206116a787828801611517565b93505060406116b887828801611599565b925050606085013567ffffffffffffffff8111156116d9576116d8611eff565b5b6116e58782880161156b565b91505092959194509250565b6000806040838503121561170857611707611f04565b5b600061171685828601611517565b92505060206117278582860161152c565b9150509250929050565b6000806040838503121561174857611747611f04565b5b600061175685828601611517565b925050602061176785828601611599565b9150509250929050565b60006020828403121561178757611786611f04565b5b600061179584828501611541565b91505092915050565b6000602082840312156117b4576117b3611f04565b5b60006117c284828501611556565b91505092915050565b6000602082840312156117e1576117e0611f04565b5b60006117ef84828501611599565b91505092915050565b61180181611d4f565b82525050565b61181081611d61565b82525050565b600061182182611c8d565b61182b8185611ca3565b935061183b818560208601611dd2565b61184481611f09565b840191505092915050565b600061185a82611c98565b6118648185611cb4565b9350611874818560208601611dd2565b61187d81611f09565b840191505092915050565b6000611895603283611cb4565b91506118a082611f1a565b604082019050919050565b60006118b8602583611cb4565b91506118c382611f69565b604082019050919050565b60006118db601c83611cb4565b91506118e682611fb8565b602082019050919050565b60006118fe602483611cb4565b915061190982611fe1565b604082019050919050565b6000611921601983611cb4565b915061192c82612030565b602082019050919050565b6000611944602983611cb4565b915061194f82612059565b604082019050919050565b6000611967603e83611cb4565b9150611972826120a8565b604082019050919050565b600061198a602083611cb4565b9150611995826120f7565b602082019050919050565b60006119ad601883611cb4565b91506119b882612120565b602082019050919050565b60006119d0602183611cb4565b91506119db82612149565b604082019050919050565b60006119f3602e83611cb4565b91506119fe82612198565b604082019050919050565b611a1281611db9565b82525050565b6000602082019050611a2d60008301846117f8565b92915050565b6000608082019050611a4860008301876117f8565b611a5560208301866117f8565b611a626040830185611a09565b8181036060830152611a748184611816565b905095945050505050565b6000602082019050611a946000830184611807565b92915050565b60006020820190508181036000830152611ab4818461184f565b905092915050565b60006020820190508181036000830152611ad581611888565b9050919050565b60006020820190508181036000830152611af5816118ab565b9050919050565b60006020820190508181036000830152611b15816118ce565b9050919050565b60006020820190508181036000830152611b35816118f1565b9050919050565b60006020820190508181036000830152611b5581611914565b9050919050565b60006020820190508181036000830152611b7581611937565b9050919050565b60006020820190508181036000830152611b958161195a565b9050919050565b60006020820190508181036000830152611bb58161197d565b9050919050565b60006020820190508181036000830152611bd5816119a0565b9050919050565b60006020820190508181036000830152611bf5816119c3565b9050919050565b60006020820190508181036000830152611c15816119e6565b9050919050565b6000602082019050611c316000830184611a09565b92915050565b6000611c41611c52565b9050611c4d8282611e37565b919050565b6000604051905090565b600067ffffffffffffffff821115611c7757611c76611ec6565b5b611c8082611f09565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611cd082611db9565b9150611cdb83611db9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1057611d0f611e68565b5b828201905092915050565b6000611d2682611db9565b9150611d3183611db9565b925082821015611d4457611d43611e68565b5b828203905092915050565b6000611d5a82611d99565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611df0578082015181840152602081019050611dd5565b83811115611dff576000848401525b50505050565b60006002820490506001821680611e1d57607f821691505b60208210811415611e3157611e30611e97565b5b50919050565b611e4082611f09565b810181811067ffffffffffffffff82111715611e5f57611e5e611ec6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6121f081611d4f565b81146121fb57600080fd5b50565b61220781611d61565b811461221257600080fd5b50565b61221e81611d6d565b811461222957600080fd5b50565b61223581611db9565b811461224057600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea26469706673582212205379e933df622a205c121bf1ab94e4b89970684e1d45133ed1a4d21d20b8588264736f6c63430008070033";

type BasicNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicNft__factory extends ContractFactory {
  constructor(...args: BasicNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicNft> {
    return super.deploy(overrides || {}) as Promise<BasicNft>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BasicNft {
    return super.attach(address) as BasicNft;
  }
  override connect(signer: Signer): BasicNft__factory {
    return super.connect(signer) as BasicNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicNftInterface {
    return new utils.Interface(_abi) as BasicNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicNft {
    return new Contract(address, _abi, signerOrProvider) as BasicNft;
  }
}
